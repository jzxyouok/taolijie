package com.fh.taolijie.dao.mapper;

import com.fh.taolijie.domain.quest.FinishRequestModel;
import com.fh.taolijie.domain.quest.FinishRequestModelExample;
import java.util.List;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

@Repository
public interface FinishRequestModelMapper {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table finish_request
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table finish_request
     *
     * @mbggenerated
     */
    int insert(FinishRequestModel record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table finish_request
     *
     * @mbggenerated
     */
    int insertSelective(FinishRequestModel record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table finish_request
     *
     * @mbggenerated
     */
    List<FinishRequestModel> selectByExample(FinishRequestModelExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table finish_request
     *
     * @mbggenerated
     */
    FinishRequestModel selectByPrimaryKey(Integer id);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table finish_request
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(FinishRequestModel record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table finish_request
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(FinishRequestModel record);

    boolean checkMemberIdAndQuestIdExists(@Param("memId") Integer memId, @Param("questId") Integer questId);


    List<FinishRequestModel> findBy(FinishRequestModel model);
    long countFindBy(FinishRequestModel model);
}