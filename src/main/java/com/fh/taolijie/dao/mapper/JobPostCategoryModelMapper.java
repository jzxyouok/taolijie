package com.fh.taolijie.dao.mapper;

import com.fh.taolijie.cache.annotation.NoCache;
import com.fh.taolijie.cache.annotation.RedisCache;
import com.fh.taolijie.cache.annotation.RedisEvict;
import com.fh.taolijie.domain.JobPostCategoryModel;
import com.fh.taolijie.domain.JobPostModel;
import com.fh.taolijie.domain.middle.JobCategoryWithJob;
import org.apache.ibatis.annotations.Param;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.cache.annotation.Caching;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface JobPostCategoryModelMapper extends BaseMapper<JobPostCategoryModel> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_post_category
     *
     * @mbggenerated
     */
    @RedisEvict({
            JobPostCategoryModel.class,
            JobPostModel.class
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_post_category
     *
     * @mbggenerated
     */
    //@CacheEvict(value = "jobCategoryListCache", allEntries = true, beforeInvocation = true)
    @RedisEvict({
            JobPostCategoryModel.class,
            JobPostModel.class
    })
    int insert(JobPostCategoryModel record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_post_category
     *
     * @mbggenerated
     */
    //@CacheEvict(value = "jobCategoryListCache", allEntries = true, beforeInvocation = true )
    @RedisEvict({
            JobPostCategoryModel.class,
            JobPostModel.class
    })
    int insertSelective(JobPostCategoryModel record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_post_category
     *
     * @mbggenerated
     */
    //@Cacheable(value = "jobCategoryCache", key = "'JobPostCategory:id:'.concat(#p0)")
    @RedisCache(JobPostCategoryModel.class)
    JobPostCategoryModel selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_post_category
     *
     * @mbggenerated
     */
    @RedisEvict({
            JobPostCategoryModel.class,
            JobPostModel.class
    })
    int updateByPrimaryKeySelective(JobPostCategoryModel record);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_post_category
     *
     * @mbggenerated
     */
    @RedisEvict({
            JobPostCategoryModel.class,
            JobPostModel.class
    })
    int updateByPrimaryKey(JobPostCategoryModel record);

    @RedisCache(JobPostCategoryModel.class)
    List<JobPostCategoryModel> getAll(@Param("pageNumber") int pageNumber, @Param("pageSize") int pageSize);
    @RedisCache(JobPostCategoryModel.class)
    long countGetAll();

    @NoCache
    List<JobPostCategoryModel> getInBatch(List<Integer> idList);

    /**
     * 查出兼职对应的分类
     * @return
     */
    @NoCache
    List<JobCategoryWithJob> getByJobInBatch(List<Integer> jobIdList);

    @RedisCache(JobPostCategoryModel.class)
    JobPostCategoryModel findByName(@Param("name") String name);

    boolean isCategoryEmpty(Integer categoryId);
}