<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fh.taolijie.dao.mapper.CollectionModelMapper">
    <resultMap id="BaseResultMap" type="com.fh.taolijie.domain.acc.CollectionModel">
        <id column="collection_id" property="id" jdbcType="INTEGER"/>
        <result column="collection_created_time" property="createdTime" jdbcType="TIMESTAMP"/>
        <result column="collection_member_id" property="memberId" jdbcType="INTEGER"/>
        <result column="collection_job_post_id" property="jobPostId" jdbcType="INTEGER"/>
        <result column="collection_sh_post_id" property="shPostId" jdbcType="INTEGER"/>
        <result column="collection_resume_id" property="resumeId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id AS collection_id,
        created_time as collection_created_time,
        member_id AS collection_member_id,
        job_post_id AS collection_job_post_id,
        sh_post_id AS collection_sh_post_id,
        resume_id AS collection_resume_id
    </sql>
    <sql id="collection_column">
        collection.id as collection_id,
        collection.created_time AS collection_created_time,
        collection.member_id AS collection_member_id,
        collection.job_post_id AS collection_job_post_id,
        collection.sh_post_id AS collection_sh_post_id,
        collection.resume_id AS collection_resume_id
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.fh.taolijie.domain.acc.CollectionModelExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from my_collection
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        LIMIT
            #{pageNumber}, #{pageSize}
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from my_collection
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from my_collection
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.fh.taolijie.domain.acc.CollectionModel">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into my_collection (id, created_time, member_id,
        job_post_id, sh_post_id, resume_id
        )
        values (#{id,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, #{memberId,jdbcType=INTEGER},
        #{jobPostId,jdbcType=INTEGER}, #{shPostId,jdbcType=INTEGER}, #{resumeId,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.fh.taolijie.domain.acc.CollectionModel">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into my_collection
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="jobPostId != null">
                job_post_id,
            </if>
            <if test="shPostId != null">
                sh_post_id,
            </if>
            <if test="resumeId != null">
                resume_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=INTEGER},
            </if>
            <if test="jobPostId != null">
                #{jobPostId,jdbcType=INTEGER},
            </if>
            <if test="shPostId != null">
                #{shPostId,jdbcType=INTEGER},
            </if>
            <if test="resumeId != null">
                #{resumeId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.fh.taolijie.domain.acc.CollectionModelExample"
            resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from my_collection
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update my_collection
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.createdTime != null">
                created_time = #{record.createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.memberId != null">
                member_id = #{record.memberId,jdbcType=INTEGER},
            </if>
            <if test="record.jobPostId != null">
                job_post_id = #{record.jobPostId,jdbcType=INTEGER},
            </if>
            <if test="record.shPostId != null">
                sh_post_id = #{record.shPostId,jdbcType=INTEGER},
            </if>
            <if test="record.resumeId != null">
                resume_id = #{record.resumeId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update my_collection
        set id = #{record.id,jdbcType=INTEGER},
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
        member_id = #{record.memberId,jdbcType=INTEGER},
        job_post_id = #{record.jobPostId,jdbcType=INTEGER},
        sh_post_id = #{record.shPostId,jdbcType=INTEGER},
        resume_id = #{record.resumeId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.fh.taolijie.domain.acc.CollectionModel">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update my_collection
        <set>
            <if test="createdTime != null">
                created_time = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=INTEGER},
            </if>
            <if test="jobPostId != null">
                job_post_id = #{jobPostId,jdbcType=INTEGER},
            </if>
            <if test="shPostId != null">
                sh_post_id = #{shPostId,jdbcType=INTEGER},
            </if>
            <if test="resumeId != null">
                resume_id = #{resumeId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fh.taolijie.domain.acc.CollectionModel">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update my_collection
        set created_time = #{createdTime,jdbcType=TIMESTAMP},
        member_id = #{memberId,jdbcType=INTEGER},
        job_post_id = #{jobPostId,jdbcType=INTEGER},
        sh_post_id = #{shPostId,jdbcType=INTEGER},
        resume_id = #{resumeId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="isMemberAndJobExists" resultType="boolean">
        SELECT
            EXISTS (
                SELECT 1 FROM my_collection WHERE member_id = #{memberId} AND job_post_id = #{jobId}
            )
    </select>
    <select id="isMemberAndShExists" resultType="boolean">
        SELECT
          EXISTS (
            SELECT 1 FROM my_collection WHERE member_id = #{memberId} AND sh_post_id = #{shId}
        )
    </select>
    <select id="isMemberAndResumeExists" resultType="boolean">
        SELECT
          EXISTS (
            SELECT 1 FROM my_collection WHERE member_id = #{memberId} AND resume_id = #{resumeId}
        )
    </select>

    <delete id="deleteByMemberAndJob">
        DELETE FROM
            my_collection
        WHERE
            member_id = #{memberId} AND job_post_id = #{jobId}
    </delete>
    <delete id="deleteByMemberAndSh">
        DELETE FROM
            my_collection
        WHERE
            member_id = #{memberId} AND sh_post_id = #{shId}
    </delete>
    <delete id="deleteByMemberAndResume">
        DELETE FROM
            my_collection
        WHERE
            member_id = #{memberId} AND resume_id = #{resumeId}
    </delete>

</mapper>