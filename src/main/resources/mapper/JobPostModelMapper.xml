<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fh.taolijie.dao.mapper.JobPostModelMapper">
    <resultMap id="BaseResultMap" type="com.fh.taolijie.domain.job.JobPostModel">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="job_id" property="id" jdbcType="INTEGER"/>
        <result column="job_title" property="title" jdbcType="VARCHAR"/>

        <result column="job_expired_time" property="expiredTime" jdbcType="TIMESTAMP"/>
        <result column="job_post_time" property="postTime" jdbcType="TIMESTAMP"/>

        <result column="job_work_place" property="workPlace" jdbcType="VARCHAR"/>
        <result column="job_work_region" property="workRegion" jdbcType="VARCHAR"/>

        <result column="job_wage" property="wage" jdbcType="DECIMAL"/>
        <result column="job_time_to_pay" property="timeToPay" jdbcType="VARCHAR"/>
        <result column="job_job_description" property="jobDescription" jdbcType="VARCHAR"/>
        <result column="job_contact" property="contact" jdbcType="VARCHAR"/>
        <result column="job_contact_phone" property="contactPhone" jdbcType="VARCHAR"/>
        <result column="job_contact_email" property="contactEmail" jdbcType="VARCHAR"/>
        <result column="job_contact_qq" property="contactQq" jdbcType="VARCHAR"/>
        <result column="job_job_detail" property="jobDetail" jdbcType="VARCHAR"/>
        <result column="job_likes" property="likes" jdbcType="INTEGER"/>
        <result column="job_dislikes" property="dislikes" jdbcType="INTEGER"/>
        <result column="job_job_post_category_id" property="jobPostCategoryId" jdbcType="INTEGER"/>
        <result column="job_member_id" property="memberId" jdbcType="INTEGER"/>
        <result column="job_education_level" property="educationLevel" jdbcType="VARCHAR"/>
        <result column="job_complaint" property="complaint" jdbcType="INTEGER"/>
        <result column="job_work_time" property="workTime" jdbcType="VARCHAR"/>
        <result column="job_salary_unit" property="salaryUnit" jdbcType="VARCHAR"/>
        <result column="job_page_view" property="pageView" jdbcType="INTEGER"/>
        <result column="job_verified" property="verified" jdbcType="VARCHAR"/>
        <result column="job_job_postcol" property="jobPostcol" jdbcType="VARCHAR"/>
        <result column="job_applicant_amount" property="applicantAmount" jdbcType="INTEGER"/>

        <result column="job_introduce" property="introduce" jdbcType="LONGVARCHAR"/>
        <result column="job_application_resume_ids" property="applicationResumeIds" jdbcType="LONGVARCHAR"/>
        <result column="job_deleted" property="deleted" />

        <result column="job_expired" property="expired" jdbcType="BOOLEAN"/>

        <result column="job_province" property="province" jdbcType="VARCHAR"/>
        <result column="job_city" property="city" jdbcType="VARCHAR"/>
        <result column="job_region" property="region" jdbcType="VARCHAR"/>

        <association property="member" resultMap="com.fh.taolijie.dao.mapper.MemberModelMapper.BaseResultMap"/>
        <association property="category"
                     resultMap="com.fh.taolijie.dao.mapper.JobPostCategoryModelMapper.BaseResultMap"/>

    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        post.id AS job_id,
        post.title AS job_title,
        post.expired_time  AS job_expired_time,
        post.post_time AS job_post_time,
        post.work_place AS job_work_place,
        post.work_region AS job_work_region,
        post.wage AS job_wage, post.time_to_pay AS job_time_to_pay,
        post.job_description AS job_job_description,
        post.contact AS job_contact, post.contact_phone AS job_contact_phone, post.contact_email AS job_contact_email, post.contact_qq AS job_contact_qq, post.job_detail AS job_job_detail, post.likes AS job_likes,
        post.dislikes AS job_dislikes, post.job_post_category_id AS job_job_post_category_id,
        post.member_id AS job_member_id, post.education_level AS job_education_level, post.complaint AS job_complaint, post.work_time AS job_work_time, post.salary_unit AS job_salary_unit, post.page_view AS job_page_view,
        post.verified AS job_verified,
        post.job_postcol AS job_job_postcol, post.applicant_amount AS job_applicant_amount, post.introduce AS job_introduce, post.application_resume_ids AS job_application_resume_ids,
        post.deleted AS job_deleted,
        post.expired AS job_expired,
        post.province AS job_province,
        post.city AS job_city,
        post.region AS job_region
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
            <include refid="Base_Column_List"/>,
            <include refid="com.fh.taolijie.dao.mapper.JobPostCategoryModelMapper.category_column"/>,
            <include refid="com.fh.taolijie.dao.mapper.MemberModelMapper.member_column_without_password" />
        from job_post post
            LEFT JOIN member mem ON mem.id = post.member_id
            LEFT JOIN job_post_category cate ON cate.id = post.job_post_category_id
        where post.id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        DELETE FROM job_post
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        INSERT INTO job_post (title, expired_time,
        post_time, work_place, work_region, wage,
        time_to_pay, job_description, contact,
        contact_phone, contact_email, contact_qq,
        job_detail, likes, dislikes,
        job_post_category_id, member_id, education_level,
        complaint, work_time, salary_unit,
        page_view, verified, job_postcol,
        applicant_amount, introduce, application_resume_ids,
        deleted,
        expired,
        province,
        city,
        region
        )
        VALUES (#{title,jdbcType=VARCHAR}, #{expiredTime},
        #{postTime}, #{workPlace,jdbcType=VARCHAR}, #{workRegion}, #{wage,jdbcType=DECIMAL},
        #{timeToPay,jdbcType=VARCHAR}, #{jobDescription,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR},
        #{contactPhone,jdbcType=VARCHAR}, #{contactEmail,jdbcType=VARCHAR}, #{contactQq,jdbcType=VARCHAR},
        #{jobDetail,jdbcType=VARCHAR}, #{likes,jdbcType=INTEGER}, #{dislikes,jdbcType=INTEGER},
        #{jobPostCategoryId,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{educationLevel,jdbcType=VARCHAR},
        #{complaint,jdbcType=INTEGER}, #{workTime,jdbcType=VARCHAR}, #{salaryUnit,jdbcType=VARCHAR},
        #{pageView,jdbcType=INTEGER}, #{verified,jdbcType=VARCHAR}, #{jobPostcol,jdbcType=VARCHAR},
        #{applicantAmount,jdbcType=INTEGER}, #{introduce,jdbcType=LONGVARCHAR},
        #{applicationResumeIds,jdbcType=LONGVARCHAR},
        #{deleted}, #{expired},
        #{province},
        #{city},
        #{region}
        )
    </insert>
    <insert id="insertSelective">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into job_post
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                title,
            </if>
            <if test="expiredTime != null">
                expired_time,
            </if>
            <if test="postTime != null">
                post_time,
            </if>
            <if test="workPlace != null">
                work_place,
            </if>
            <if test="workRegion != null">
                work_region,
            </if>
            <if test="wage != null">
                wage,
            </if>
            <if test="timeToPay != null">
                time_to_pay,
            </if>
            <if test="jobDescription != null">
                job_description,
            </if>
            <if test="contact != null">
                contact,
            </if>
            <if test="contactPhone != null">
                contact_phone,
            </if>
            <if test="contactEmail != null">
                contact_email,
            </if>
            <if test="contactQq != null">
                contact_qq,
            </if>
            <if test="jobDetail != null">
                job_detail,
            </if>
            <if test="likes != null">
                likes,
            </if>
            <if test="dislikes != null">
                dislikes,
            </if>
            <if test="jobPostCategoryId != null">
                job_post_category_id,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="educationLevel != null">
                education_level,
            </if>
            <if test="complaint != null">
                complaint,
            </if>
            <if test="workTime != null">
                work_time,
            </if>
            <if test="salaryUnit != null">
                salary_unit,
            </if>
            <if test="pageView != null">
                page_view,
            </if>
            <if test="verified != null">
                verified,
            </if>
            <if test="jobPostcol != null">
                job_postcol,
            </if>
            <if test="applicantAmount != null">
                applicant_amount,
            </if>
            <if test="introduce != null">
                introduce,
            </if>
            <if test="applicationResumeIds != null">
                application_resume_ids,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="expired != null">
                expired,
            </if>


            <if test="province != null">
                province,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="region != null">
                region,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="expiredTime != null">
                #{expiredTime},
            </if>
            <if test="postTime != null">
                #{postTime},
            </if>
            <if test="workPlace != null">
                #{workPlace,jdbcType=VARCHAR},
            </if>
            <if test="workRegion != null">
                #{workRegion,jdbcType=VARCHAR},
            </if>
            <if test="wage != null">
                #{wage,jdbcType=DECIMAL},
            </if>
            <if test="timeToPay != null">
                #{timeToPay,jdbcType=VARCHAR},
            </if>
            <if test="jobDescription != null">
                #{jobDescription,jdbcType=VARCHAR},
            </if>
            <if test="contact != null">
                #{contact,jdbcType=VARCHAR},
            </if>
            <if test="contactPhone != null">
                #{contactPhone,jdbcType=VARCHAR},
            </if>
            <if test="contactEmail != null">
                #{contactEmail,jdbcType=VARCHAR},
            </if>
            <if test="contactQq != null">
                #{contactQq,jdbcType=VARCHAR},
            </if>
            <if test="jobDetail != null">
                #{jobDetail,jdbcType=VARCHAR},
            </if>
            <if test="likes != null">
                #{likes,jdbcType=INTEGER},
            </if>
            <if test="dislikes != null">
                #{dislikes,jdbcType=INTEGER},
            </if>
            <if test="jobPostCategoryId != null">
                #{jobPostCategoryId,jdbcType=INTEGER},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=INTEGER},
            </if>
            <if test="educationLevel != null">
                #{educationLevel,jdbcType=VARCHAR},
            </if>
            <if test="complaint != null">
                #{complaint,jdbcType=INTEGER},
            </if>
            <if test="workTime != null">
                #{workTime,jdbcType=VARCHAR},
            </if>
            <if test="salaryUnit != null">
                #{salaryUnit,jdbcType=VARCHAR},
            </if>
            <if test="pageView != null">
                #{pageView,jdbcType=INTEGER},
            </if>
            <if test="verified != null">
                #{verified,jdbcType=VARCHAR},
            </if>
            <if test="jobPostcol != null">
                #{jobPostcol,jdbcType=VARCHAR},
            </if>
            <if test="applicantAmount != null">
                #{applicantAmount,jdbcType=INTEGER},
            </if>
            <if test="introduce != null">
                #{introduce,jdbcType=LONGVARCHAR},
            </if>
            <if test="applicationResumeIds != null">
                #{applicationResumeIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="deleted != null">
                #{deleted},
            </if>
            <if test="expired != null">
                #{expired},
            </if>



            <if test="province != null">
                #{province},
            </if>
            <if test="city != null">
                #{city},
            </if>
            <if test="region != null">
                #{region},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update job_post
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="expiredTime != null">
                expired_time = #{expiredTime},
            </if>
            <if test="postTime != null">
                post_time = #{postTime},
            </if>
            <if test="workPlace != null">
                work_place = #{workPlace,jdbcType=VARCHAR},
            </if>
            <if test="workRegion != null">
                work_region = #{workRegion,jdbcType=VARCHAR},
            </if>
            <if test="wage != null">
                wage = #{wage,jdbcType=DECIMAL},
            </if>
            <if test="timeToPay != null">
                time_to_pay = #{timeToPay,jdbcType=VARCHAR},
            </if>
            <if test="jobDescription != null">
                job_description = #{jobDescription,jdbcType=VARCHAR},
            </if>
            <if test="contact != null">
                contact = #{contact,jdbcType=VARCHAR},
            </if>
            <if test="contactPhone != null">
                contact_phone = #{contactPhone,jdbcType=VARCHAR},
            </if>
            <if test="contactEmail != null">
                contact_email = #{contactEmail,jdbcType=VARCHAR},
            </if>
            <if test="contactQq != null">
                contact_qq = #{contactQq,jdbcType=VARCHAR},
            </if>
            <if test="jobDetail != null">
                job_detail = #{jobDetail,jdbcType=VARCHAR},
            </if>
            <if test="likes != null">
                likes = #{likes,jdbcType=INTEGER},
            </if>
            <if test="dislikes != null">
                dislikes = #{dislikes,jdbcType=INTEGER},
            </if>
            <if test="jobPostCategoryId != null">
                job_post_category_id = #{jobPostCategoryId,jdbcType=INTEGER},
            </if>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=INTEGER},
            </if>
            <if test="educationLevel != null">
                education_level = #{educationLevel,jdbcType=VARCHAR},
            </if>
            <if test="complaint != null">
                complaint = #{complaint,jdbcType=INTEGER},
            </if>
            <if test="workTime != null">
                work_time = #{workTime,jdbcType=VARCHAR},
            </if>
            <if test="salaryUnit != null">
                salary_unit = #{salaryUnit,jdbcType=VARCHAR},
            </if>
            <if test="pageView != null">
                page_view = #{pageView,jdbcType=INTEGER},
            </if>
            <if test="verified != null">
                verified = #{verified,jdbcType=VARCHAR},
            </if>
            <if test="jobPostcol != null">
                job_postcol = #{jobPostcol,jdbcType=VARCHAR},
            </if>
            <if test="applicantAmount != null">
                applicant_amount = #{applicantAmount,jdbcType=INTEGER},
            </if>
            <if test="introduce != null">
                introduce = #{introduce,jdbcType=LONGVARCHAR},
            </if>
            <if test="applicationResumeIds != null">
                application_resume_ids = #{applicationResumeIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="deleted != null">
                deleted = #{deleted},
            </if>
            <if test="expired != null">
                expired = #{expired},
            </if>


            <if test="province != null">
                province = #{province},
            </if>
            <if test="city != null">
                city = #{city},
            </if>
            <if test="region != null">
                region = #{region},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fh.taolijie.domain.job.JobPostModel">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        UPDATE job_post
        SET title = #{title,jdbcType=VARCHAR},
        expired_time = #{expiredTime},
        post_time = #{postTime},
        work_place = #{workPlace,jdbcType=VARCHAR},
        work_region = #{workRegion},
        wage = #{wage,jdbcType=DECIMAL},
        time_to_pay = #{timeToPay,jdbcType=VARCHAR},
        job_description = #{jobDescription,jdbcType=VARCHAR},
        contact = #{contact,jdbcType=VARCHAR},
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
        contact_email = #{contactEmail,jdbcType=VARCHAR},
        contact_qq = #{contactQq,jdbcType=VARCHAR},
        job_detail = #{jobDetail,jdbcType=VARCHAR},
        likes = #{likes,jdbcType=INTEGER},
        dislikes = #{dislikes,jdbcType=INTEGER},
        job_post_category_id = #{jobPostCategoryId,jdbcType=INTEGER},
        member_id = #{memberId,jdbcType=INTEGER},
        education_level = #{educationLevel,jdbcType=VARCHAR},
        complaint = #{complaint,jdbcType=INTEGER},
        work_time = #{workTime,jdbcType=VARCHAR},
        salary_unit = #{salaryUnit,jdbcType=VARCHAR},
        page_view = #{pageView,jdbcType=INTEGER},
        verified = #{verified,jdbcType=VARCHAR},
        job_postcol = #{jobPostcol,jdbcType=VARCHAR},
        applicant_amount = #{applicantAmount,jdbcType=INTEGER},
        introduce = #{introduce,jdbcType=LONGVARCHAR},
        application_resume_ids = #{applicationResumeIds,jdbcType=LONGVARCHAR},
        deleted = #{deleted},
        expired = #{expired},

        province = #{province},
        city = #{city},
        region = #{region}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getAll" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>,
            <include refid="com.fh.taolijie.dao.mapper.JobPostCategoryModelMapper.category_column"/>,
            <include refid="com.fh.taolijie.dao.mapper.MemberModelMapper.member_column_without_password" />
        FROM job_post post
            LEFT JOIN member mem ON mem.id = post.member_id
            LEFT JOIN job_post_category cate ON cate.id = post.job_post_category_id
        WHERE
            post.deleted = false
        ORDER BY
            post.post_time DESC
        LIMIT
            #{pageNumber}, #{pageSize}
    </select>
    <select id="countGetAll" resultType="long">
        SELECT COUNT(*)
        FROM job_post post
    </select>

    <select id="getInBatch" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>,
            <include refid="com.fh.taolijie.dao.mapper.JobPostCategoryModelMapper.category_column"/>,
            <include refid="com.fh.taolijie.dao.mapper.MemberModelMapper.member_column_without_password" />
        FROM job_post post
            LEFT JOIN member mem ON mem.id = post.member_id
            LEFT JOIN job_post_category cate ON cate.id = post.job_post_category_id
        WHERE
        post.id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">#{id}</foreach>
    </select>

    <select id="getByComplaint" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>,
            <include refid="com.fh.taolijie.dao.mapper.JobPostCategoryModelMapper.category_column"/>,
            <include refid="com.fh.taolijie.dao.mapper.MemberModelMapper.member_column_without_password" />
        FROM job_post post
            LEFT JOIN member mem ON mem.id = post.member_id
            LEFT JOIN job_post_category cate ON cate.id = post.job_post_category_id
        WHERE
            post.complaint IS NOT NULL AND post.complaint > 0
        ORDER BY
            post.complaint DESC
        LIMIT
            #{pageNumber}, #{pageSize}
    </select>
    <select id="countGetByComplaint" resultType="long">
        SELECT
            COUNT(*)
        FROM
            job_post post
        WHERE
            post.complaint IS NOT NULL AND post.complaint > 0
    </select>


    <select id="searchBy" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>,
            <include refid="com.fh.taolijie.dao.mapper.JobPostCategoryModelMapper.category_column"/>,
            <include refid="com.fh.taolijie.dao.mapper.MemberModelMapper.member_column_without_password" />
        FROM job_post post
            LEFT JOIN member mem ON mem.id = post.member_id
            LEFT JOIN job_post_category cate ON cate.id = post.job_post_category_id
        <where>
            <if test="title != null">
                post.title LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="expiredTime != null">
                OR post.expired_time = #{expiredTime}
            </if>
            <if test="postTime != null">
                OR post.post_time = #{postTime}
            </if>
            <if test="workPlace != null">
                OR post.work_place LIKE CONCAT('%', #{workPlace,jdbcType=VARCHAR}, '%')
            </if>
            <if test="workRegion != null">
                OR post.work_region LIKE CONCAT('%', #{workRegion}, '%')
            </if>
            <if test="wage != null">
                OR post.wage = #{wage,jdbcType=DECIMAL}
            </if>
            <if test="timeToPay != null">
                OR post.time_to_pay = #{timeToPay,jdbcType=VARCHAR}
            </if>
            <if test="jobDescription != null">
                OR post.job_description LIKE CONCAT('%', #{jobDescription,jdbcType=VARCHAR}, '%')
            </if>
            <if test="contact != null">
                OR post.contact = #{contact,jdbcType=VARCHAR}
            </if>
            <if test="contactPhone != null">
                OR post.contact_phone = #{contactPhone,jdbcType=VARCHAR}
            </if>
            <if test="contactEmail != null">
                OR post.contact_email = #{contactEmail,jdbcType=VARCHAR}
            </if>
            <if test="contactQq != null">
                OR post.contact_qq = #{contactQq,jdbcType=VARCHAR}
            </if>
            <if test="jobDetail != null">
                OR post.job_detail LIKE CONCAT('%', #{jobDetail,jdbcType=VARCHAR}, '%')
            </if>
            <if test="likes != null">
                OR post.likes = #{likes,jdbcType=INTEGER}
            </if>
            <if test="dislikes != null">
                OR post.dislikes = #{dislikes,jdbcType=INTEGER}
            </if>
            <if test="jobPostCategoryId != null">
                OR post.job_post_category_id = #{jobPostCategoryId,jdbcType=INTEGER}
            </if>
            <if test="memberId != null">
                OR post.member_id = #{memberId,jdbcType=INTEGER}
            </if>
            <if test="educationLevel != null">
                OR post.education_level = #{educationLevel,jdbcType=VARCHAR}
            </if>
            <if test="complaint != null">
                OR post.complaint = #{complaint,jdbcType=INTEGER}
            </if>
            <if test="workTime != null">
                OR post.work_time LIKE CONCAT('%', #{workTime,jdbcType=VARCHAR}, '%')
            </if>
            <if test="salaryUnit != null">
                OR post.salary_unit = #{salaryUnit,jdbcType=VARCHAR}
            </if>
            <if test="pageView != null">
                OR post.page_view = #{pageView,jdbcType=INTEGER}
            </if>
            <if test="verified != null">
                OR post.verified = #{verified,jdbcType=VARCHAR}
            </if>
            <if test="jobPostcol != null">
                OR post.job_postcol = #{jobPostcol,jdbcType=VARCHAR}
            </if>
            <if test="applicantAmount != null">
                OR post.applicant_amount = #{applicantAmount,jdbcType=INTEGER}
            </if>
            <if test="introduce != null">
                OR post.introduce LIKE CONCAT('%', #{introduce,jdbcType=LONGVARCHAR}, '%')
            </if>
            <if test="applicationResumeIds != null">
                OR post.application_resume_ids = #{applicationResumeIds,jdbcType=LONGVARCHAR}
            </if>
<!--            <if test="deleted != null">
                OR post.deleted = #{deleted}
            </if>-->
            <if test="expired != null">
                OR post.expired = #{expired}
            </if>


            <if test="province != null">
                OR post.province = #{province}
            </if>
            <if test="city != null">
                OR post.city = #{city}
            </if>
            <if test="region != null">
                OR post.region = #{region}
            </if>

            AND post.deleted = #{deleted}
        </where>
        ORDER BY
            <choose>
                <when test="orderByDate == true">post.post_time DESC</when>
                <when test="orderByVisit == true">post.page_view DESC</when>
                <otherwise>post.post_time DESC</otherwise>
            </choose>
        LIMIT
            #{pageNumber}, #{pageSize}
    </select>
    <select id="countSearchBy" resultType="long">
        SELECT COUNT(*) FROM job_post post
        <where>
            <if test="title != null">
                post.title LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="expiredTime != null">
                OR post.expired_time = #{expiredTime}
            </if>
            <if test="postTime != null">
                OR post.post_time = #{postTime}
            </if>
            <if test="workPlace != null">
                OR post.work_place LIKE CONCAT('%', #{workPlace,jdbcType=VARCHAR}, '%')
            </if>
            <if test="workRegion != null">
                OR post.work_region LIKE CONCAT('%', #{workRegion}, '%')
            </if>
            <if test="wage != null">
                OR post.wage = #{wage,jdbcType=DECIMAL}
            </if>
            <if test="timeToPay != null">
                OR post.time_to_pay = #{timeToPay,jdbcType=VARCHAR}
            </if>
            <if test="jobDescription != null">
                OR post.job_description LIKE CONCAT('%', #{jobDescription,jdbcType=VARCHAR}, '%')
            </if>
            <if test="contact != null">
                OR post.contact = #{contact,jdbcType=VARCHAR}
            </if>
            <if test="contactPhone != null">
                OR post.contact_phone = #{contactPhone,jdbcType=VARCHAR}
            </if>
            <if test="contactEmail != null">
                OR post.contact_email = #{contactEmail,jdbcType=VARCHAR}
            </if>
            <if test="contactQq != null">
                OR post.contact_qq = #{contactQq,jdbcType=VARCHAR}
            </if>
            <if test="jobDetail != null">
                OR post.job_detail LIKE CONCAT('%', #{jobDetail,jdbcType=VARCHAR}, '%')
            </if>
            <if test="likes != null">
                OR post.likes = #{likes,jdbcType=INTEGER}
            </if>
            <if test="dislikes != null">
                OR post.dislikes = #{dislikes,jdbcType=INTEGER}
            </if>
            <if test="jobPostCategoryId != null">
                OR post.job_post_category_id = #{jobPostCategoryId,jdbcType=INTEGER}
            </if>
            <if test="memberId != null">
                OR post.member_id = #{memberId,jdbcType=INTEGER}
            </if>
            <if test="educationLevel != null">
                OR post.education_level = #{educationLevel,jdbcType=VARCHAR}
            </if>
            <if test="complaint != null">
                OR post.complaint = #{complaint,jdbcType=INTEGER}
            </if>
            <if test="workTime != null">
                OR post.work_time LIKE CONCAT('%', #{workTime,jdbcType=VARCHAR}, '%')
            </if>
            <if test="salaryUnit != null">
                OR post.salary_unit = #{salaryUnit,jdbcType=VARCHAR}
            </if>
            <if test="pageView != null">
                OR post.page_view = #{pageView,jdbcType=INTEGER}
            </if>
            <if test="verified != null">
                OR post.verified = #{verified,jdbcType=VARCHAR}
            </if>
            <if test="jobPostcol != null">
                OR post.job_postcol = #{jobPostcol,jdbcType=VARCHAR}
            </if>
            <if test="applicantAmount != null">
                OR post.applicant_amount = #{applicantAmount,jdbcType=INTEGER}
            </if>
            <if test="introduce != null">
                OR post.introduce LIKE CONCAT('%', #{introduce,jdbcType=LONGVARCHAR}, '%')
            </if>
            <if test="applicationResumeIds != null">
                OR post.application_resume_ids = #{applicationResumeIds,jdbcType=LONGVARCHAR}
            </if>
<!--            <if test="deleted != null">
                OR post.deleted = #{deleted}
            </if>-->
            <if test="expired != null">
                OR post.expired = #{expired}
            </if>


            <if test="province != null">
                OR post.province = #{province}
            </if>
            <if test="city != null">
                OR post.city = #{city}
            </if>
            <if test="region != null">
                OR post.region = #{region}
            </if>
            AND post.deleted = #{deleted}
        </where>
    </select>


    <select id="findBy" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>,
            <include refid="com.fh.taolijie.dao.mapper.JobPostCategoryModelMapper.category_column"/>,
            <include refid="com.fh.taolijie.dao.mapper.MemberModelMapper.member_column_without_password" />
        FROM job_post post
            LEFT JOIN member mem ON mem.id = post.member_id
            LEFT JOIN job_post_category cate ON cate.id = post.job_post_category_id
        <where>
            <if test="title != null">
                post.title = #{title,jdbcType=VARCHAR}
            </if>
            <if test="expiredTime != null">
                AND post.expired_time = #{expiredTime}
            </if>
            <if test="postTime != null">
                AND post.post_time = #{postTime}
            </if>
            <if test="workPlace != null">
                AND post.work_place = #{workPlace,jdbcType=VARCHAR}
            </if>
            <if test="workRegion != null">
                AND post.work_region = #{workRegion}
            </if>
            <if test="wage != null">
                AND post.wage = #{wage,jdbcType=DECIMAL}
            </if>
            <if test="timeToPay != null">
                AND post.time_to_pay = #{timeToPay,jdbcType=VARCHAR}
            </if>
            <if test="jobDescription != null">
                AND post.job_description = #{jobDescription,jdbcType=VARCHAR}
            </if>
            <if test="contact != null">
                AND post.contact = #{contact,jdbcType=VARCHAR}
            </if>
            <if test="contactPhone != null">
                AND post.contact_phone = #{contactPhone,jdbcType=VARCHAR}
            </if>
            <if test="contactEmail != null">
                AND post.contact_email = #{contactEmail,jdbcType=VARCHAR}
            </if>
            <if test="contactQq != null">
                AND post.contact_qq = #{contactQq,jdbcType=VARCHAR}
            </if>
            <if test="jobDetail != null">
                AND post.job_detail = #{jobDetail,jdbcType=VARCHAR}
            </if>
            <if test="likes != null">
                AND post.likes = #{likes,jdbcType=INTEGER}
            </if>
            <if test="dislikes != null">
                AND post.dislikes = #{dislikes,jdbcType=INTEGER}
            </if>
            <if test="jobPostCategoryId != null">
                AND post.job_post_category_id = #{jobPostCategoryId,jdbcType=INTEGER}
            </if>
            <if test="memberId != null">
                AND post.member_id = #{memberId,jdbcType=INTEGER}
            </if>
            <if test="educationLevel != null">
                AND post.education_level = #{educationLevel,jdbcType=VARCHAR}
            </if>
            <if test="complaint != null">
                AND post.complaint = #{complaint,jdbcType=INTEGER}
            </if>
            <if test="workTime != null">
                AND post.work_time = #{workTime,jdbcType=VARCHAR}
            </if>
            <if test="salaryUnit != null">
                AND post.salary_unit = #{salaryUnit,jdbcType=VARCHAR}
            </if>
            <if test="pageView != null">
                AND post.page_view = #{pageView,jdbcType=INTEGER}
            </if>
            <if test="verified != null">
                AND post.verified = #{verified,jdbcType=VARCHAR}
            </if>
            <if test="jobPostcol != null">
                AND post.job_postcol = #{jobPostcol,jdbcType=VARCHAR}
            </if>
            <if test="applicantAmount != null">
                AND post.applicant_amount = #{applicantAmount,jdbcType=INTEGER}
            </if>
            <if test="introduce != null">
                AND post.introduce = #{introduce,jdbcType=LONGVARCHAR}
            </if>
            <if test="applicationResumeIds != null">
                AND post.application_resume_ids = #{applicationResumeIds,jdbcType=LONGVARCHAR}
            </if>
            <if test="deleted != null">
                AND post.deleted = #{deleted}
            </if>
<!--            <if test="filterExpiredPost == true">
                AND post.expired_time >= now()
            </if>-->
            <if test="expired != null">
                AND post.expired = #{expired}
            </if>

            <if test="province != null">
                AND post.province = #{province}
            </if>
            <if test="city != null">
                AND post.city = #{city}
            </if>
            <if test="region != null">
                AND post.region = #{region}
            </if>

            <if test="cateId != null">
                AND post.job_post_category_id = #{cateId}
            </if>
        </where>
        ORDER BY
            <choose>
                <when test="orderByDate == true">post.post_time DESC</when>
                <when test="orderByVisit == true">post.page_view DESC</when>
                <otherwise>post.post_time DESC</otherwise>
            </choose>
        LIMIT
            #{pageNumber}, #{pageSize}
    </select>

    <select id="countFindBy" resultType="long">
        SELECT COUNT(*) FROM job_post post
        <where>
            <if test="title != null">
                post.title = #{title,jdbcType=VARCHAR}
            </if>
            <if test="expiredTime != null">
                AND post.expired_time = #{expiredTime}
            </if>
            <if test="postTime != null">
                AND post.post_time = #{postTime}
            </if>
            <if test="workPlace != null">
                AND post.work_place = #{workPlace,jdbcType=VARCHAR}
            </if>
            <if test="workRegion != null">
                AND post.work_region = #{workRegion}
            </if>
            <if test="wage != null">
                AND post.wage = #{wage,jdbcType=DECIMAL}
            </if>
            <if test="timeToPay != null">
                AND post.time_to_pay = #{timeToPay,jdbcType=VARCHAR}
            </if>
            <if test="jobDescription != null">
                AND post.job_description = #{jobDescription,jdbcType=VARCHAR}
            </if>
            <if test="contact != null">
                AND post.contact = #{contact,jdbcType=VARCHAR}
            </if>
            <if test="contactPhone != null">
                AND post.contact_phone = #{contactPhone,jdbcType=VARCHAR}
            </if>
            <if test="contactEmail != null">
                AND post.contact_email = #{contactEmail,jdbcType=VARCHAR}
            </if>
            <if test="contactQq != null">
                AND post.contact_qq = #{contactQq,jdbcType=VARCHAR}
            </if>
            <if test="jobDetail != null">
                AND post.job_detail = #{jobDetail,jdbcType=VARCHAR}
            </if>
            <if test="likes != null">
                AND post.likes = #{likes,jdbcType=INTEGER}
            </if>
            <if test="dislikes != null">
                AND post.dislikes = #{dislikes,jdbcType=INTEGER}
            </if>
            <if test="jobPostCategoryId != null">
                AND post.job_post_category_id = #{jobPostCategoryId,jdbcType=INTEGER}
            </if>
            <if test="memberId != null">
                AND post.member_id = #{memberId,jdbcType=INTEGER}
            </if>
            <if test="educationLevel != null">
                AND post.education_level = #{educationLevel,jdbcType=VARCHAR}
            </if>
            <if test="complaint != null">
                AND post.complaint = #{complaint,jdbcType=INTEGER}
            </if>
            <if test="workTime != null">
                AND post.work_time = #{workTime,jdbcType=VARCHAR}
            </if>
            <if test="salaryUnit != null">
                AND post.salary_unit = #{salaryUnit,jdbcType=VARCHAR}
            </if>
            <if test="pageView != null">
                AND post.page_view = #{pageView,jdbcType=INTEGER}
            </if>
            <if test="verified != null">
                AND post.verified = #{verified,jdbcType=VARCHAR}
            </if>
            <if test="jobPostcol != null">
                AND post.job_postcol = #{jobPostcol,jdbcType=VARCHAR}
            </if>
            <if test="applicantAmount != null">
                AND post.applicant_amount = #{applicantAmount,jdbcType=INTEGER}
            </if>
            <if test="introduce != null">
                AND post.introduce = #{introduce,jdbcType=LONGVARCHAR}
            </if>
            <if test="applicationResumeIds != null">
                AND post.application_resume_ids = #{applicationResumeIds,jdbcType=LONGVARCHAR}
            </if>
            <if test="deleted != null">
                AND post.deleted = #{deleted}
            </if>
<!--            <if test="filterExpiredPost == true">
                AND post.expired_time >= now()
            </if>-->
            <if test="expired != null">
                AND post.expired = #{expired}
            </if>


            <if test="province != null">
                AND post.province = #{province}
            </if>
            <if test="city != null">
                AND post.city = #{city}
            </if>
            <if test="region != null">
                AND post.region = #{region}
            </if>

            <if test="cateId != null">
                AND post.job_post_category_id = #{cateId}
            </if>
        </where>
    </select>


    <update id="complaint">
        UPDATE job_post
        SET complaint = complaint + 1
        WHERE id = #{postId}
    </update>

    <update id="increasePageView">
        UPDATE job_post
        SET page_view = page_view + 1
        WHERE id = #{postId}
    </update>

    <update id="increaseLike">
        UPDATE job_post
        SET likes = likes + 1
        WHERE id = #{postId}
    </update>

    <update id="decreaseLike">
        UPDATE
            job_post
        SET
            likes = likes - 1
        WHERE
            id = #{postId}
    </update>

    <!-- 向简历投递表中添加记录 -->
    <insert id="postResume">
        INSERT INTO resume_post_rel (resume_id, job_post_id, created_time, member_id)
        VALUES (#{resumeId}, #{jobPostId}, now(), #{memberId})
    </insert>

    <update id="setDeleted">
        UPDATE
            job_post
        SET
            deleted = #{deleted}
        WHERE
            id = #{postId}
    </update>

    <select id="checkDeleted" resultType="boolean">
        SELECT
            deleted
        FROM
            job_post
        WHERE
            id = #{postId}
    </select>
</mapper>