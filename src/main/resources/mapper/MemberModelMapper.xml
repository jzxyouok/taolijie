<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fh.taolijie.dao.mapper.MemberModelMapper">
    <resultMap id="BaseResultMap" type="com.fh.taolijie.domain.acc.MemberModel">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="mem_id" property="id" jdbcType="INTEGER"/>
        <result column="mem_username" property="username" jdbcType="VARCHAR"/>
        <result column="mem_password" property="password" jdbcType="VARCHAR"/>

        <result column="mem_reg_type" property="regType" jdbcType="INTEGER"/>

        <result column="mem_email" property="email" jdbcType="VARCHAR"/>
        <result column="mem_name" property="name" jdbcType="VARCHAR"/>
        <result column="mem_gender" property="gender" jdbcType="VARCHAR"/>
        <result column="mem_id_certi" property="idCerti" jdbcType="VARCHAR"/>
        <result column="mem_stu_certi" property="stuCerti" jdbcType="VARCHAR"/>
        <result column="mem_emp_certi" property="empCerti" jdbcType="VARCHAR"/>
        <result column="mem_profile_photo_path" property="profilePhotoPath" jdbcType="VARCHAR"/>
        <result column="mem_phone" property="phone" jdbcType="VARCHAR"/>
        <result column="mem_qq" property="qq" jdbcType="VARCHAR"/>
        <result column="mem_age" property="age" jdbcType="INTEGER"/>
        <result column="mem_company_name" property="companyName" jdbcType="VARCHAR"/>
        <result column="mem_company_addr" property="companyAddr" jdbcType="VARCHAR"/>
        <result column="mem_created_time" property="createdTime" jdbcType="TIMESTAMP"/>
        <result column="mem_valid" property="valid" jdbcType="BIT"/>
        <result column="mem_complaint" property="complaint" jdbcType="INTEGER"/>
        <result column="mem_profile_photo_id" property="profilePhotoId" jdbcType="INTEGER"/>
        <result column="mem_auto_login_identifier" property="autoLoginIdentifier" jdbcType="VARCHAR"/>
        <result column="mem_last_post_time" property="lastPostTime" jdbcType="DATE"/>
        <result column="mem_reset_password_token" property="resetPasswordToken" jdbcType="VARCHAR"/>
        <result column="mem_wechat_token" property="wechatToken" jdbcType="VARCHAR"/>
        <result column="mem_last_token_date" property="lastTokenDate" jdbcType="DATE"/>
        <result column="mem_school_organization" property="schoolOrganization" jdbcType="VARCHAR"/>
        <result column="mem_credits" property="credits" jdbcType="INTEGER"/>
        <result column="mem_user_level" property="userLevel" jdbcType="VARCHAR"/>

        <result column="mem_province" property="province" jdbcType="VARCHAR"/>
        <result column="mem_city" property="city" jdbcType="VARCHAR"/>
        <result column="mem_region" property="region" jdbcType="VARCHAR"/>
        <result column="mem_college_name" property="collegeName" jdbcType="VARCHAR"/>
        <result column="mem_major" property="major" jdbcType="VARCHAR"/>

        <result column="mem_student_id" property="studentId" jdbcType="LONGVARCHAR"/>
        <result column="mem_block_list" property="blockList" jdbcType="LONGVARCHAR"/>
        <result column="mem_applied_job_ids" property="appliedJobIds" jdbcType="LONGVARCHAR"/>
        <result column="mem_liked_job_ids" property="likedJobIds" jdbcType="LONGVARCHAR"/>
        <result column="mem_liked_sh_ids" property="likedShIds" jdbcType="LONGVARCHAR"/>
<!--        <result column="mem_favorite_job_ids" property="favoriteJobIds" jdbcType="LONGVARCHAR"/>
        <result column="mem_favorite_sh_ids" property="favoriteShIds" jdbcType="LONGVARCHAR"/>
        <result column="mem_favorite_resume_ids" property="favoriteResumeIds" jdbcType="LONGVARCHAR"/>-->

        <result column="mem_read_global_noti_ids" property="readSysNotificationIds"/>

        <result column="mem_app_token" property="appToken" jdbcType="VARCHAR"/>

        <result column="mem_last_job_date" property="lastJobDate" jdbcType="TIMESTAMP" />
        <result column="mem_last_sh_date" property="lastShDate" jdbcType="TIMESTAMP" />

        <collection property="roleList" resultMap="com.fh.taolijie.dao.mapper.RoleModelMapper.BaseResultMap"/>
    </resultMap>

    <resultMap id="credits_info" type="com.fh.taolijie.dto.CreditsInfo">
        <result column="credits" property="credits" jdbcType="INTEGER" />
        <result column="user_level" property="level" jdbcType="VARCHAR" />
    </resultMap>

    <!-- wechat_token -->
    <sql id="Base_Column_List">
        id AS mem_id, username AS mem_username, password AS mem_password, email AS mem_email, name AS mem_name, gender AS mem_gender,
        id_certi AS mem_id_certi, stu_certi AS mem_stu_certi, emp_certi AS mem_emp_certi, profile_photo_path AS mem_profile_photo_path, phone AS mem_phone,
        qq AS mem_qq, age AS mem_age, company_name AS mem_company_name, comp_addr AS mem_company_addr, created_time AS mem_created_time,
        valid AS mem_valid, complaint AS mem_complaint, profile_photo_id AS mem_profile_photo_id, auto_login_identifier AS mem_auto_login_identifier,
        last_post_time AS mem_last_post_time, reset_password_token AS mem_reset_password_token, last_token_date AS mem_last_token_date, school_organization AS mem_school_organization, credits AS mem_credits,
        student_id AS mem_student_id, block_list AS mem_block_list, applied_job_ids AS mem_applied_job_ids, liked_job_ids AS mem_liked_job_ids, liked_sh_ids AS mem_liked_sh_ids,
        read_global_noti_ids AS mem_read_global_noti_ids,
        last_sh_date AS mem_last_sh_date,
        last_job_date AS mem_last_job_date,
        user_level AS mem_user_level,
        app_token AS mem_app_token,

        province AS mem_province,
        city AS mem_city,
        region AS mem_region,
        college_name AS mem_college_name,
        major AS mem_major,

        reg_type AS reg_type
    </sql>
    <sql id="member_column">
        mem.id AS mem_id, mem.username AS mem_username, mem.password AS mem_password, mem.email AS mem_email, mem.name AS mem_name,
        mem.gender AS mem_gender, mem.id_certi AS mem_id_certi, mem.stu_certi AS mem_stu_certi, mem.emp_certi AS mem_emp_certi,
        mem.profile_photo_path AS mem_profile_photo_path, mem.phone AS mem_phone,
        mem.qq AS mem_qq, mem.age AS mem_age, mem.company_name AS mem_company_name, mem.comp_addr AS mem_company_addr,
        mem.created_time AS mem_created_time, mem.valid AS mem_valid, mem.complaint AS mem_complaint,
        mem.profile_photo_id AS mem_profile_photo_id, mem.auto_login_identifier AS mem_auto_login_identifier,
        mem.last_post_time AS mem_last_post_time, mem.reset_password_token AS mem_reset_password_token,
        mem.last_token_date AS mem_last_token_date, mem.school_organization AS mem_school_organization, mem.credits AS mem_credits,
        mem.student_id AS mem_student_id, mem.block_list AS mem_block_list, mem.applied_job_ids AS mem_applied_job_ids,
        mem.liked_job_ids AS mem_liked_job_ids, mem.liked_sh_ids AS mem_liked_sh_ids,
        mem.read_global_noti_ids AS mem_read_global_noti_ids,
        mem.last_sh_date AS mem_last_sh_date,
        mem.last_job_date AS mem_last_job_date,
        mem.user_level AS mem_user_level,
        mem.app_token AS mem_app_token,

        mem.province AS mem_province,
        mem.city AS mem_city,
        mem.region AS mem_region,
        mem.college_name AS mem_college_name,
        mem.major AS mem_major,

        mem.wechat_token AS mem_wechat_token,

        mem.reg_type AS mem_reg_type
    </sql>
    <sql id="member_column_without_password">
        mem.id AS mem_id, mem.username AS mem_username,
        mem.email AS mem_email, mem.name AS mem_name, mem.gender AS mem_gender,
        mem.id_certi AS mem_id_certi, mem.stu_certi AS mem_stu_certi, mem.emp_certi AS mem_emp_certi,
        mem.profile_photo_path AS mem_profile_photo_path, mem.phone AS mem_phone,
        mem.qq AS mem_qq, mem.age AS mem_age, mem.company_name AS mem_company_name, mem.comp_addr AS mem_company_addr,
        mem.created_time AS mem_created_time, mem.valid AS mem_valid,
        mem.complaint AS mem_complaint, mem.profile_photo_id AS mem_profile_photo_id,
        mem.last_post_time AS mem_last_post_time, mem.school_organization AS mem_school_organization, mem.credits AS mem_credits,
        mem.student_id AS mem_student_id, mem.block_list AS mem_block_list, mem.applied_job_ids AS mem_applied_job_ids,
        mem.liked_job_ids AS mem_liked_job_ids, mem.liked_sh_ids AS mem_liked_sh_ids,
        mem.user_level AS mem_user_level,

        mem.province AS mem_province,
        mem.city AS mem_city,
        mem.region AS mem_region,
        mem.college_name AS mem_college_name,
        mem.major AS mem_major,

        mem.reg_type AS mem_reg_type

    </sql>
    <sql id="less_member_column">
        mem.id AS mem_id, mem.username AS mem_username,
        mem.profile_photo_path AS mem_profile_photo_path,
        mem.profile_photo_id AS mem_profile_photo_id,
        mem.reg_type AS mem_reg_type
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        SELECT
            <include refid="member_column"/>,
            r.*
        FROM member mem
        LEFT JOIN
            role r
        ON
            r.rid IN
                (SELECT role_rid
                FROM member_role
                WHERE member_id = #{id})
        WHERE mem.id = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        DELETE FROM member
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        INSERT INTO member (username, password,
        email, name, gender,
        id_certi, profile_photo_path, phone,
        qq, age, company_name,
        created_time, valid, complaint,
        profile_photo_id, auto_login_identifier, last_post_time,
        reset_password_token, last_token_date, school_organization,
        credits, student_id, block_list,
        applied_job_ids, liked_job_ids, liked_sh_ids,
        read_global_noti_ids,
        app_token,
        reg_type,
        wechat_token,
        stu_certi,
        emp_certi)
        VALUES (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR},
        #{idCerti}, #{profilePhotoPath,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
        #{qq,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR},
        #{createdTime}, #{valid,jdbcType=BIT}, #{complaint,jdbcType=INTEGER},
        #{profilePhotoId,jdbcType=INTEGER}, #{autoLoginIdentifier,jdbcType=VARCHAR}, #{lastPostTime,jdbcType=DATE},
        #{resetPasswordToken,jdbcType=VARCHAR}, #{lastTokenDate,jdbcType=DATE}, #{schoolOrganization,jdbcType=VARCHAR},
        #{credits,jdbcType=INTEGER}, #{studentId,jdbcType=LONGVARCHAR}, #{blockList,jdbcType=LONGVARCHAR},
        #{appliedJobIds,jdbcType=LONGVARCHAR}, #{likedJobIds,jdbcType=LONGVARCHAR}, #{likedShIds,jdbcType=LONGVARCHAR},
        #{readSysNotificationIds},
        #{appToken},
        #{regType},
        #{wechatToken},
        #{stuCerti},
        #{empCerti})
    </insert>
    <insert id="insertSelective">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="readSysNotificationIds != null" >
                read_global_noti_ids;
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="idCerti != null">
                id_certi,
            </if>
            <if test="profilePhotoPath != null">
                profile_photo_path,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="qq != null">
                qq,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="companyName != null">
                company_name,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="valid != null">
                valid,
            </if>
            <if test="complaint != null">
                complaint,
            </if>
            <if test="profilePhotoId != null">
                profile_photo_id,
            </if>
            <if test="autoLoginIdentifier != null">
                auto_login_identifier,
            </if>
            <if test="lastPostTime != null">
                last_post_time,
            </if>
            <if test="resetPasswordToken != null">
                reset_password_token,
            </if>
            <if test="lastTokenDate != null">
                last_token_date,
            </if>
            <if test="schoolOrganization != null">
                school_organization,
            </if>
            <if test="credits != null">
                credits,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="blockList != null">
                block_list,
            </if>
            <if test="appliedJobIds != null">
                applied_job_ids,
            </if>
            <if test="likedJobIds != null">
                liked_job_ids,
            </if>
            <if test="likedShIds != null">
                liked_sh_ids,
            </if>

            <if test="appToken != null">
                app_token,
            </if>

            <if test="lastJobDate != null" >last_job_date,</if>
            <if test="lastShDate != null" >last_sh_date,</if>

            <if test="regType != null" >reg_type,</if>
            <if test="wechatToken != null" >wechat_token,</if>

            <if test="stuCerti != null" >stu_certi,</if>
            <if test="empCerti != null" >emp_certi,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=VARCHAR},
            </if>
            <if test="idCerti != null">
                #{idCerti},
            </if>
            <if test="profilePhotoPath != null">
                #{profilePhotoPath,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                #{qq,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="companyName != null">
                #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                #{createdTime},
            </if>
            <if test="valid != null">
                #{valid,jdbcType=BIT},
            </if>
            <if test="complaint != null">
                #{complaint,jdbcType=INTEGER},
            </if>
            <if test="profilePhotoId != null">
                #{profilePhotoId,jdbcType=INTEGER},
            </if>
            <if test="autoLoginIdentifier != null">
                #{autoLoginIdentifier,jdbcType=VARCHAR},
            </if>
            <if test="lastPostTime != null">
                #{lastPostTime,jdbcType=DATE},
            </if>
            <if test="resetPasswordToken != null">
                #{resetPasswordToken,jdbcType=VARCHAR},
            </if>
            <if test="lastTokenDate != null">
                #{lastTokenDate,jdbcType=DATE},
            </if>
            <if test="schoolOrganization != null">
                #{schoolOrganization,jdbcType=VARCHAR},
            </if>
            <if test="credits != null">
                #{credits,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=LONGVARCHAR},
            </if>
            <if test="blockList != null">
                #{blockList,jdbcType=LONGVARCHAR},
            </if>
            <if test="appliedJobIds != null">
                #{appliedJobIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="likedJobIds != null">
                #{likedJobIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="likedShIds != null">
                #{likedShIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="readSysNotificationIds != null" >
                #{readSysNotificationIds},
            </if>

            <if test="appToken != null" >
                #{appToken},
            </if>

            <if test="lastJobDate != null" >#{lastJobDate},</if>
            <if test="lastShDate != null" >#{lastShDate},</if>

            <if test="regType != null" >#{regType},</if>
            <if test="wechatToken != null" >#{wechatToken},</if>

            <if test="stuCerti != null" >#{stuCerti},</if>
            <if test="empCerti != null" >#{empCerti},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update member
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
            <if test="idCerti != null">
                id_certi = #{idCerti},
            </if>
            <if test="profilePhotoPath != null">
                profile_photo_path = #{profilePhotoPath,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                qq = #{qq,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="companyName != null">
                company_name = #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="valid != null">
                valid = #{valid,jdbcType=BIT},
            </if>
            <if test="complaint != null">
                complaint = #{complaint,jdbcType=INTEGER},
            </if>
            <if test="profilePhotoId != null">
                profile_photo_id = #{profilePhotoId,jdbcType=INTEGER},
            </if>
            <if test="autoLoginIdentifier != null">
                auto_login_identifier = #{autoLoginIdentifier,jdbcType=VARCHAR},
            </if>
            <if test="lastPostTime != null">
                last_post_time = #{lastPostTime,jdbcType=DATE},
            </if>
            <if test="resetPasswordToken != null">
                reset_password_token = #{resetPasswordToken,jdbcType=VARCHAR},
            </if>
            <if test="lastTokenDate != null">
                last_token_date = #{lastTokenDate,jdbcType=DATE},
            </if>
            <if test="schoolOrganization != null">
                school_organization = #{schoolOrganization,jdbcType=VARCHAR},
            </if>
            <if test="credits != null">
                credits = #{credits,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=LONGVARCHAR},
            </if>
            <if test="blockList != null">
                block_list = #{blockList,jdbcType=LONGVARCHAR},
            </if>
            <if test="appliedJobIds != null">
                applied_job_ids = #{appliedJobIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="likedJobIds != null">
                liked_job_ids = #{likedJobIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="likedShIds != null">
                liked_sh_ids = #{likedShIds,jdbcType=LONGVARCHAR},
            </if>
            <if test="readSysNotificationIds != null" >
                read_global_noti_ids = #{readSysNotificationIds},
            </if>

            <if test="appToken != null" >
                app_token = #{appToken},
            </if>

            <if test="lastJobDate != null" >last_job_date = #{lastJobDate},</if>
            <if test="lastShDate != null" >last_sh_date = #{lastShDate},</if>

            <if test="regType != null" >reg_type = #{regType},</if>
            <if test="wechatToken != null" >wechat_token = #{wechatToken},</if>

            <if test="stuCerti != null" >stu_certi = #{stuCerti},</if>
            <if test="empCerti != null" >emp_certi = #{empCerti},</if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fh.taolijie.domain.acc.MemberModel">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        UPDATE member
        SET username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        gender = #{gender,jdbcType=VARCHAR},
        id_certi = #{idCerti},
        profile_photo_path = #{profilePhotoPath,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        qq = #{qq,jdbcType=VARCHAR},
        age = #{age,jdbcType=INTEGER},
        company_name = #{companyName,jdbcType=VARCHAR},
        created_time = #{createdTime},
        valid = #{valid,jdbcType=BIT},
        complaint = #{complaint,jdbcType=INTEGER},
        profile_photo_id = #{profilePhotoId,jdbcType=INTEGER},
        auto_login_identifier = #{autoLoginIdentifier,jdbcType=VARCHAR},
        last_post_time = #{lastPostTime,jdbcType=DATE},
        reset_password_token = #{resetPasswordToken,jdbcType=VARCHAR},
        last_token_date = #{lastTokenDate,jdbcType=DATE},
        school_organization = #{schoolOrganization,jdbcType=VARCHAR},
        credits = #{credits,jdbcType=INTEGER},
        student_id = #{studentId,jdbcType=LONGVARCHAR},
        block_list = #{blockList,jdbcType=LONGVARCHAR},
        applied_job_ids = #{appliedJobIds,jdbcType=LONGVARCHAR},
        liked_job_ids = #{likedJobIds,jdbcType=LONGVARCHAR},
        liked_sh_ids = #{likedShIds,jdbcType=LONGVARCHAR},
        read_global_noti_ids = #{readSysNotificationIds},

        last_sh_date = #{lastShDate},
        last_job_date = #{lastJobDate},
        app_token = #{appToken},

        reg_type = #{regType},
        wechat_token = #{wechatToken},
        stu_certi = #{stuCerti},
        emp_certi = #{empCerti}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectByUsername" resultMap="BaseResultMap">
        SELECT
            <include refid="member_column"/>,
            r.*
        FROM (
                 SELECT id
                 FROM member
                 WHERE username = #{username}
             ) info, member mem
            LEFT JOIN role r
                ON r.rid IN
                   (SELECT role_rid
                    FROM member_role
                    WHERE member_id = info.id)
        WHERE mem.id = info.id
    </select>

    <select id="getMemberAmount" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM member
    </select>

    <select id="checkUserExist" resultType="boolean">
        SELECT EXISTS(SELECT 1
                      FROM member
                      WHERE username = #{username})
    </select>

    <select id="selectByIdentifier" resultMap="BaseResultMap">
        SELECT
            <include refid="member_column_without_password" />,
            r.*
        FROM
            member mem
        INNER JOIN
            role r ON r.rid = (SELECT role_rid FROM member_role WHERE member_id = mem.id)
        WHERE
            mem.auto_login_identifier = #{identifier}
    </select>

    <select id="selectByWechatToken" resultMap="BaseResultMap">
        SELECT
            <include refid="member_column_without_password" />,
            r.*
        FROM
            member mem
        INNER JOIN
            role r ON r.rid = (SELECT role_rid FROM member_role WHERE member_id = mem.id)
        WHERE
            mem.wechat_token = #{token}

    </select>

    <select id="getMemberList" resultMap="BaseResultMap">
        SELECT
            <include refid="member_column_without_password" />,
            r.*
        FROM
            member mem,
            (SELECT role_rid AS role_id FROM member_role) info
        LEFT JOIN
            role r ON r.rid = info.role_id
        LIMIT #{pageNumber}, #{pageSize}
    </select>
    <select id="countGetMemberList" resultType="long">
        SELECT
            COUNT(*)
        FROM
            member mem
    </select>

    <select id="queryCreditsInfo" resultMap="credits_info">
        SELECT
            credits AS credits,
            user_level AS user_level
        FROM
            member
        WHERE
            id = #{memberId}
    </select>

    <update id="validMemberById">
        UPDATE member
        SET valid = #{valid}
        WHERE id = #{memberId}
    </update>

    <select id="findByEmail" resultMap="BaseResultMap" >
        SELECT
            <include refid="Base_Column_List"/>
        FROM member
        WHERE email = #{email}
    </select>

    <update id="addCredits">
        UPDATE
            member
        SET
            credits = credits + #{value},
            user_level = #{newLevel}
        WHERE
            id = #{memId}
    </update>

    <select id="selectEmpVerified" resultType="string">
        SELECT
            emp_certi
        FROM
            member
        WHERE
            id = #{memId}
    </select>

    <select id="selectStuVerified" resultType="string">
        SELECT
            stu_certi
        FROM
            member
        WHERE
            id = #{memId}
    </select>

    <select id="selectIdVerified" resultType="string">
        SELECT
            id_certi
        FROM
            member
        WHERE
            id = #{memId}
    </select>

    <select id="selectByAppToken" resultMap="BaseResultMap">
        SELECT
            <include refid="member_column"/>,
            r.*
        FROM
            (
              SELECT id
              FROM member
              WHERE app_token = #{token}
            ) info, member mem
        LEFT JOIN
            role r
        ON
            r.rid IN
              (SELECT role_rid
              FROM member_role
              WHERE member_id = info.id)
        WHERE mem.id = info.id
    </select>

    <select id="selectUsername" resultType="string">
        SELECT
            username
        FROM
            member
        WHERE
            id = #{memId}
    </select>

    <update id="updateAppToken">
        UPDATE
            member
        SET
            app_token = #{token}
        WHERE
            id = #{memId}
    </update>

</mapper>