<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fh.taolijie.dao.mapper.ResumeModelMapper">
    <resultMap id="BaseResultMap" type="com.fh.taolijie.domain.resume.ResumeModel">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="resume_id" property="id" jdbcType="INTEGER"/>
        <result column="resume_name" property="name" jdbcType="VARCHAR"/>
        <result column="resume_gender" property="gender" jdbcType="VARCHAR"/>
        <result column="resume_age" property="age" jdbcType="INTEGER"/>
        <result column="resume_height" property="height" jdbcType="INTEGER"/>
        <result column="resume_photo_path" property="photoPath" jdbcType="VARCHAR"/>
        <result column="resume_email" property="email" jdbcType="VARCHAR"/>
        <result column="resume_qq" property="qq" jdbcType="VARCHAR"/>
        <result column="resume_member_id" property="memberId" jdbcType="INTEGER"/>
        <result column="resume_access_authority" property="accessAuthority" jdbcType="VARCHAR"/>
        <result column="resume_page_view" property="pageView" jdbcType="INTEGER"/>
        <result column="resume_verified" property="verified" jdbcType="VARCHAR"/>

        <result column="resume_created_time" property="createdTime" jdbcType="TIMESTAMP"/>

        <result column="resume_photo_id" property="photoId" jdbcType="INTEGER"/>
        <result column="resume_phone_number" property="phoneNumber" jdbcType="VARCHAR"/>
        <result column="resume_wechat_account" property="wechatAccount" jdbcType="VARCHAR"/>

        <result column="resume_spare_time" property="spareTime" jdbcType="VARCHAR"/>

        <result column="resume_experience" property="experience" jdbcType="LONGVARCHAR"/>
        <result column="resume_introduce" property="introduce" jdbcType="LONGVARCHAR"/>

        <result column="resume_school" property="school" jdbcType="VARCHAR"/>
        <result column="resume_major" property="major" jdbcType="VARCHAR"/>
        <result column="resume_preferred_province" property="preferredProvince" jdbcType="VARCHAR"/>
        <result column="resume_preferred_city" property="preferredCity" jdbcType="VARCHAR"/>
        <result column="resume_preferred_region" property="preferredRegion" jdbcType="VARCHAR"/>
        <result column="resume_birthday" property="birthday" jdbcType="TIMESTAMP" />

        <association property="member" resultMap="com.fh.taolijie.dao.mapper.MemberModelMapper.BaseResultMap"/>
    </resultMap>

    <resultMap id="resume_with_intend" type="com.fh.taolijie.domain.middle.ResumeWithIntend">
        <result property="resumeId" column="resume_id" />
        <result property="cateId" column="cate_id" />
        <result property="cateName" column="cate_name" />
        <result property="cateLevel" column="cate_level" />
        <result property="cateThemeColor" column="cate_theme_color" />
    </resultMap>

    <resultMap id="PostRecord" type="com.fh.taolijie.domain.middle.ResumePostRecord">
        <association property="jobPost" resultMap="com.fh.taolijie.dao.mapper.JobPostModelMapper.BaseResultMap"/>
        <association property="member" resultMap="com.fh.taolijie.dao.mapper.MemberModelMapper.BaseResultMap"/>
        <association property="resume" resultMap="BaseResultMap"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id AS resume_id, name AS resume_name, gender AS resume_gender, age AS resume_age,
        height AS resume_height, photo_path AS resume_photo_path, email AS resume_email,
        qq AS resume_qq, member_id AS resume_member_id, access_authority AS resume_access_authority,
        page_view AS resume_page_view, verified AS resume_verified, photo_id AS resume_photo_id,
        phone_number AS resume_phone_number, wechat_account AS resume_wechat_account, created_time AS resume_created_time,
        experience AS resume_experience, introduce AS resume_introduce,
        spare_time AS resume_spare_time,
        school AS resume_school,
        major AS resume_major,
        preferred_province AS resume_preferred_province,
        preferred_city AS resume_preferred_city,
        preferred_region AS resume_preferred_region,
        birthday AS resume_birthday
    </sql>

    <sql id="resume_column">
        re.id AS resume_id, re.name AS resume_name, re.gender AS resume_gender, re.age AS resume_age,
        re.height AS resume_height, re.photo_path AS resume_photo_path, re.email AS resume_email,
        re.qq AS resume_qq, re.member_id AS resume_member_id, re.access_authority AS resume_access_authority,
        re.page_view AS resume_page_view, re.verified AS resume_verified, re.photo_id AS resume_photo_id,
        re.phone_number AS resume_phone_number, re.wechat_account AS resume_wechat_account, re.created_time AS resume_created_time,
        re.experience AS resume_experience, re.introduce AS resume_introduce,
        re.spare_time AS resume_spare_time,
        re.school AS resume_school,
        re.major AS resume_major,
        re.preferred_province AS resume_preferred_province,
        re.preferred_city AS resume_preferred_city,
        re.preferred_region AS resume_preferred_region,
        re.birthday AS resume_birthday
    </sql>

    <!-- 只包含简历的头信息 -->
    <sql id="less_resume_column">
        re.id AS resume_id, re.name AS resume_name,
        re.height AS resume_height,
        re.gender AS resume_gender,
        re.age AS resume_age,
        re.created_time AS resume_created_time,
        re.photo_path AS resume_photo_path,
        re.member_id AS resume_member_id, re.access_authority AS resume_access_authority,
        re.verified AS resume_verified, re.photo_id AS resume_photo_id,
        re.school AS resume_school,
        re.major AS resume_major
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
            <include refid="resume_column"/>,
            <include refid="com.fh.taolijie.dao.mapper.MemberModelMapper.member_column_without_password"/>
        from resume re
            LEFT JOIN member mem ON mem.id = re.member_id
        where re.id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        DELETE FROM resume
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        INSERT INTO resume (name, gender,
        age, height, photo_path,
        email, qq, member_id,
        access_authority, page_view, verified,
        photo_id, phone_number, wechat_account,
        experience, introduce, created_time,
        spare_time,
        school,
        major,
        preferred_province,
        preferred_city,
        preferred_region,
        birthday)
        VALUES (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR},
        #{age,jdbcType=INTEGER}, #{height,jdbcType=INTEGER}, #{photoPath,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{memberId,jdbcType=INTEGER},
        #{accessAuthority,jdbcType=VARCHAR}, #{pageView,jdbcType=INTEGER}, #{verified,jdbcType=VARCHAR},
        #{photoId,jdbcType=INTEGER}, #{phoneNumber,jdbcType=VARCHAR}, #{wechatAccount,jdbcType=VARCHAR},
        #{experience,jdbcType=LONGVARCHAR}, #{introduce,jdbcType=LONGVARCHAR}, #{createdTime, jdbcType=TIMESTAMP},
        #{spareTime},
        #{school},
        #{major},
        #{preferredProvince},
        #{preferredCity},
        #{preferredRegion},
        #{birthday}
        )
    </insert>
    <insert id="insertSelective">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into resume
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="height != null">
                height,
            </if>
            <if test="photoPath != null">
                photo_path,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="qq != null">
                qq,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="accessAuthority != null">
                access_authority,
            </if>
            <if test="pageView != null">
                page_view,
            </if>
            <if test="verified != null">
                verified,
            </if>
            <if test="photoId != null">
                photo_id,
            </if>
            <if test="phoneNumber != null">
                phone_number,
            </if>
            <if test="wechatAccount != null">
                wechat_account,
            </if>
            <if test="experience != null">
                experience,
            </if>
            <if test="introduce != null">
                introduce,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>

            <if test="spareTime != null">
                spare_time,
            </if>


            <if test="school != null">
                school,
            </if>
            <if test="major != null">
                major,
            </if>
            <if test="preferredProvince != null">
                preferred_province,
            </if>
            <if test="preferredCity != null">
                preferred_city,
            </if>
            <if test="preferredRegion != null">
                preferred_region,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="height != null">
                #{height,jdbcType=INTEGER},
            </if>
            <if test="photoPath != null">
                #{photoPath,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                #{qq,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=INTEGER},
            </if>
            <if test="accessAuthority != null">
                #{accessAuthority,jdbcType=VARCHAR},
            </if>
            <if test="pageView != null">
                #{pageView,jdbcType=INTEGER},
            </if>
            <if test="verified != null">
                #{verified,jdbcType=VARCHAR},
            </if>
            <if test="photoId != null">
                #{photoId,jdbcType=INTEGER},
            </if>
            <if test="phoneNumber != null">
                #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="wechatAccount != null">
                #{wechatAccount,jdbcType=VARCHAR},
            </if>
            <if test="experience != null">
                #{experience,jdbcType=LONGVARCHAR},
            </if>
            <if test="introduce != null">
                #{introduce,jdbcType=LONGVARCHAR},
            </if>
            <if test="createdTime != null">
                #{createdTime},
            </if>
            <if test="spareTime != null">
                #{spareTime}
            </if>


            <if test="school != null">
                #{school},
            </if>
            <if test="major != null">
                #{major},
            </if>
            <if test="preferredProvince != null">
                #{preferredProvince},
            </if>
            <if test="preferredCity != null">
                #{preferredCity},
            </if>
            <if test="preferredRegion != null">
                #{preferredRegion},
            </if>
            <if test="birthday != null">
                #{birthday},
            </if>

        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update resume
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="height != null">
                height = #{height,jdbcType=INTEGER},
            </if>
            <if test="photoPath != null">
                photo_path = #{photoPath,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                qq = #{qq,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=INTEGER},
            </if>
            <if test="accessAuthority != null">
                access_authority = #{accessAuthority,jdbcType=VARCHAR},
            </if>
            <if test="pageView != null">
                page_view = #{pageView,jdbcType=INTEGER},
            </if>
            <if test="verified != null">
                verified = #{verified,jdbcType=VARCHAR},
            </if>
            <if test="photoId != null">
                photo_id = #{photoId,jdbcType=INTEGER},
            </if>
            <if test="phoneNumber != null">
                phone_number = #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="wechatAccount != null">
                wechat_account = #{wechatAccount,jdbcType=VARCHAR},
            </if>
            <if test="experience != null">
                experience = #{experience,jdbcType=LONGVARCHAR},
            </if>
            <if test="introduce != null">
                introduce = #{introduce,jdbcType=LONGVARCHAR},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="spareTime != null">
                spare_time = #{spareTime},
            </if>


            <if test="school != null">
                school = #{school},
            </if>
            <if test="major != null">
                major = #{major},
            </if>
            <if test="preferredProvince != null">
                preferred_province = #{preferredProvince},
            </if>
            <if test="preferredCity != null">
                preferred_city = #{preferredCity},
            </if>
            <if test="preferredRegion != null">
                preferred_region = #{preferredRegion},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fh.taolijie.domain.resume.ResumeModel">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        UPDATE resume
        SET name = #{name,jdbcType=VARCHAR},
        gender = #{gender,jdbcType=VARCHAR},
        age = #{age,jdbcType=INTEGER},
        height = #{height,jdbcType=INTEGER},
        photo_path = #{photoPath,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        qq = #{qq,jdbcType=VARCHAR},
        member_id = #{memberId,jdbcType=INTEGER},
        access_authority = #{accessAuthority,jdbcType=VARCHAR},
        page_view = #{pageView,jdbcType=INTEGER},
        verified = #{verified,jdbcType=VARCHAR},
        photo_id = #{photoId,jdbcType=INTEGER},
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
        wechat_account = #{wechatAccount,jdbcType=VARCHAR},
        experience = #{experience,jdbcType=LONGVARCHAR},
        introduce = #{introduce,jdbcType=LONGVARCHAR},
        created_time = #{createdTime},
        spare_time = #{spareTime},

        school = #{school},
        major = #{major},
        preferred_province = #{preferredProvince},
        preferred_city = #{preferredCity},
        preferred_region = #{preferredRegion},
        birthday = #{birthday}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getAll" resultMap="BaseResultMap">
        SELECT
            <include refid="less_resume_column"/>,
            <include refid="com.fh.taolijie.dao.mapper.MemberModelMapper.member_column_without_password"/>
        FROM resume re
            LEFT JOIN member mem ON mem.id = re.member_id
        ORDER BY
            re.created_time DESC
        LIMIT
            #{pageNumber}, #{pageSize}
    </select>
    <select id="countGetAll" resultType="long">
        SELECT
            COUNT(*)
        FROM
            resume re
    </select>


    <select id="getInBatch" resultMap="BaseResultMap">
        SELECT
            <include refid="resume_column"/>,
            <include refid="com.fh.taolijie.dao.mapper.MemberModelMapper.member_column_without_password"/>
        FROM resume re
            LEFT JOIN member mem ON mem.id = re.member_id
        WHERE re.id IN
        <foreach collection="list" item="id" open="(" close=")" separator="," >#{id}</foreach>
    </select>

    <update id="updateTime">
        UPDATE resume
        SET created_time = now()
        WHERE id = #{resumeId}
    </update>

    <update id="increasePageView">
        UPDATE resume
        SET page_view = page_view + 1
        WHERE id = #{resumeId}
    </update>

    <select id="findBy" resultMap="BaseResultMap">
        SELECT
            <include refid="resume_column"/>,
            <include refid="com.fh.taolijie.dao.mapper.MemberModelMapper.member_column_without_password"/>
        FROM resume re
            INNER JOIN member mem ON mem.id = re.member_id
        <where>
            <if test="name != null">
                re.name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                AND re.gender = #{gender,jdbcType=VARCHAR}
            </if>
            <if test="age != null">
                AND re.age = #{age,jdbcType=INTEGER}
            </if>
            <if test="height != null">
                AND re.height = #{height,jdbcType=INTEGER}
            </if>
            <if test="photoPath != null">
                AND re.photo_path = #{photoPath,jdbcType=VARCHAR}
            </if>
            <if test="email != null">
                AND re.email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="qq != null">
                AND re.qq = #{qq,jdbcType=VARCHAR}
            </if>
            <if test="memberId != null">
                AND re.member_id = #{memberId,jdbcType=INTEGER}
            </if>
            <if test="accessAuthority != null">
                AND re.access_authority = #{accessAuthority,jdbcType=VARCHAR}
            </if>
            <if test="pageView != null">
                AND re.page_view = #{pageView,jdbcType=INTEGER}
            </if>
            <if test="verified != null">
                AND re.verified = #{verified,jdbcType=VARCHAR}
            </if>
            <if test="photoId != null">
                AND re.photo_id = #{photoId,jdbcType=INTEGER}
            </if>
            <if test="phoneNumber != null">
                AND re.phone_number = #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="wechatAccount != null">
                AND re.wechat_account = #{wechatAccount,jdbcType=VARCHAR}
            </if>
            <if test="experience != null">
                AND re.experience = #{experience,jdbcType=LONGVARCHAR}
            </if>
            <if test="introduce != null">
                AND re.introduce = #{introduce,jdbcType=LONGVARCHAR}
            </if>
            <if test="createdTime != null">
                AND re.created_time = #{createdTime}
            </if>
            <if test="spareTime != null">
                AND re.spare_time = #{spareTime}
            </if>


            <if test="school != null">
                AND re.school = #{school},
            </if>
            <if test="major != null">
                AND re.major = #{major},
            </if>
            <if test="preferredProvince != null">
                AND re.preferred_province = #{preferredProvince},
            </if>
            <if test="preferredCity != null">
                AND re.preferred_city = #{preferredCity},
            </if>
            <if test="preferredRegion != null">
                AND re.preferred_region = #{preferredRegion},
            </if>
            <if test="birthday != null">
                AND re.birthday = #{birthday},
            </if>

            <!-- 根据意向查询 -->
            <if test="intendIdList != null">
                AND re.id IN (
                    SELECT resume_id FROM resume_job_post_category WHERE job_post_category_id IN
                    <foreach collection="intendIdList" item="cate_id" open="(" close=")" separator=",">#{cate_id}</foreach>
                )
            </if>

        </where>
        ORDER BY
            re.created_time DESC
        LIMIT
            #{pageNumber}, #{pageSize}
    </select>
    <select id="countFindBy" resultType="long">
        SELECT
            COUNT(*)
        FROM
            resume re
        <where>
            <if test="name != null">re.name = #{name,jdbcType=VARCHAR}</if>
            <if test="gender != null">AND re.gender = #{gender,jdbcType=VARCHAR}</if>
            <if test="age != null">
                AND re.age = #{age,jdbcType=INTEGER}
            </if>
            <if test="height != null">
                AND re.height = #{height,jdbcType=INTEGER}
            </if>
            <if test="photoPath != null">
                AND re.photo_path = #{photoPath,jdbcType=VARCHAR}
            </if>
            <if test="email != null">
                AND re.email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="qq != null">
                AND re.qq = #{qq,jdbcType=VARCHAR}
            </if>
            <if test="memberId != null">
                AND re.member_id = #{memberId,jdbcType=INTEGER}
            </if>
            <if test="accessAuthority != null">
                AND re.access_authority = #{accessAuthority,jdbcType=VARCHAR}
            </if>
            <if test="pageView != null">
                AND re.page_view = #{pageView,jdbcType=INTEGER}
            </if>
            <if test="verified != null">
                AND re.verified = #{verified,jdbcType=VARCHAR}
            </if>
            <if test="photoId != null">
                AND re.photo_id = #{photoId,jdbcType=INTEGER}
            </if>
            <if test="phoneNumber != null">
                AND re.phone_number = #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="wechatAccount != null">
                AND re.wechat_account = #{wechatAccount,jdbcType=VARCHAR}
            </if>
            <if test="experience != null">
                AND re.experience = #{experience,jdbcType=LONGVARCHAR}
            </if>
            <if test="introduce != null">
                AND re.introduce = #{introduce,jdbcType=LONGVARCHAR}
            </if>
            <if test="createdTime != null">
                AND re.created_time = #{createdTime}
            </if>
            <if test="spareTime != null">
                AND re.spare_time = #{spareTime}
            </if>


            <if test="school != null">
                AND re.school = #{school},
            </if>
            <if test="major != null">
                AND re.major = #{major},
            </if>
            <if test="preferredProvince != null">
                AND re.preferredProvince = #{preferredProvince},
            </if>
            <if test="preferredCity != null">
                AND re.preferredCity = #{preferredCity},
            </if>
            <if test="preferredRegion != null">
                AND re.preferredRegion = #{preferredRegion},
            </if>
            <if test="birthday != null">
                AND re.birthday = #{birthday},
            </if>

            <!-- 根据意向查询 -->
            <if test="intendIdList != null">
                AND re.id IN (
                    SELECT resume_id FROM resume_job_post_category WHERE job_post_category_id IN
                    <foreach collection="intendIdList" item="cate_id" open="(" close=")" separator=",">#{cate_id}</foreach>
                )
            </if>
        </where>
    </select>

    <select id="filterByIntendAndGender" resultMap="BaseResultMap">
        SELECT
            <include refid="resume_column" />,
            <include refid="com.fh.taolijie.dao.mapper.MemberModelMapper.less_member_column"></include>
        FROM
            resume re
                INNER JOIN member mem ON mem.id = re.member_id
        WHERE
            re.id IN (
                SELECT resume_id FROM resume_job_post_category WHERE job_post_category_id = #{intendId}
            )
            AND re.gender = #{gender}
        LIMIT
            #{pageNumber}, #{pageSize}
    </select>

    <select id="countFilterByIntendAndGender" resultType="long">
        SELECT
            COUNT(*)
        FROM
            resume re
        WHERE
            re.id IN (
                SELECT resume_id FROM resume_job_post_category WHERE job_post_category_id = #{intendId}
            )
        AND
            re.gender = #{gender}
    </select>

    <select id="findByAuth" resultMap="BaseResultMap">
        SELECT
            <include refid="less_resume_column"/>,
            <include refid="com.fh.taolijie.dao.mapper.MemberModelMapper.member_column_without_password"/>
        FROM
            resume re
        INNER JOIN
            member mem ON mem.id = re.member_id
        WHERE
            re.access_authority IN <foreach collection="authList" item="auth_name" open="(" separator="," close=")">#{auth_name}</foreach>
        ORDER BY
            re.created_time DESC
        LIMIT
            #{pageNumber}, #{pageSize}
    </select>
    <select id="countFindByAuth" resultType="long">
        SELECT
            COUNT(*)
        FROM
            resume re
        WHERE
            re.access_authority IN <foreach collection="authList" item="auth_name" open="(" separator="," close=")">#{auth_name}</foreach>
    </select>

    <select id="findPostRecordByMember" resultMap="PostRecord">
        SELECT
            <include refid="com.fh.taolijie.dao.mapper.MemberModelMapper.member_column_without_password"/>,
            <include refid="less_resume_column"/>,
            <include refid="com.fh.taolijie.dao.mapper.JobPostModelMapper.Base_Column_List"/>
        FROM
            resume_post_rel rp
              INNER JOIN
                member mem ON mem.id = rp.member_id
              INNER JOIN
                job_post post ON post.id = rp.job_post_id
              INNER JOIN
                resume re ON re.id = rp.resume_id
        WHERE
            re.member_id = #{memberId}
        LIMIT
            #{pageNumber}, #{pageSize}
    </select>
    <select id="countFindPostRecordByMember" resultType="long">
        SELECT
            COUNT(*)
        FROM
            resume_post_rel rp
        WHERE
            re.member_id = #{memberId}
    </select>

    <select id="findIntendInBatch" resultMap="resume_with_intend">
        select
            intend.resume_id, cate.id AS cate_id, cate.name AS cate_name, cate.memo AS cate_memo,
	        cate.level AS cate_level, cate.theme_color AS cate_theme_color
        from
            resume_job_post_category intend
	    inner join
		    job_post_category cate ON intend.job_post_category_id = cate.id
        where
		    intend.resume_id in <foreach collection="list" item="id" open="(" close=")" separator=",">#{id}</foreach>
    </select>
</mapper>