<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:cache="http://www.springframework.org/schema/cache"
                xmlns:aop="http://www.springframework.org/schema/aop"
             xsi:schemaLocation="
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		"
        >
    <!--<cache:annotation-driven />-->



    <bean id="cacheFilter" class="com.fh.taolijie.servlet.CacheFilter" />

    <!-- redis连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="50" />
    </bean>

    <!-- Redis连接配置 -->
    <bean id="redisConnectionFactory"
                class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
        <property name="hostName" value="127.0.0.1" />
        <property name="password" value="111111" />

        <property name="usePool" value="true" />
        <property name="timeout" value="2000" />
        <property name="poolConfig" ref="jedisPoolConfig" />
    </bean>

    <!-- Serializer -->
    <bean id="stringSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="jacksonSerializer" class="com.fh.taolijie.component.GenericJackson2JsonRedisSerializer">
    </bean>
    <bean id="jdkSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />


    <!-- redis template -->
    <bean id="redisTemplate"
                class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory" />
        <property name="keySerializer" ref="stringSerializer" />
        <property name="valueSerializer" ref="jacksonSerializer" />
    </bean>
    <bean id="redisTemplateForString"
          class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory" />
        <property name="keySerializer" ref="stringSerializer" />
        <property name="valueSerializer" ref="stringSerializer" />
        <property name="hashKeySerializer" ref="stringSerializer" />
        <property name="hashValueSerializer" ref="stringSerializer" />
    </bean>

    <!-- cache manager -->
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg name="template" ref="redisTemplate" />
        <property name="expires">
            <map>
                <entry key="webCache" value="600" /> <!-- 10 minutes -->
                <entry key="memberCache" value="3600" /> <!-- 1 hour -->
            </map>
        </property>
    </bean>

    <!-- channel监听 -->
    <bean id="messageListener" class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
        <constructor-arg>
            <bean class="com.fh.taolijie.cache.message.AutoAuditListener"/>
        </constructor-arg>
    </bean>

    <bean id="redisContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
        <property name="connectionFactory" ref="redisConnectionFactory"/>
        <property name="messageListeners">
            <map>
                <entry key-ref="messageListener">
                    <bean class="org.springframework.data.redis.listener.ChannelTopic">
                        <constructor-arg value="auto-audit" />
                    </bean>
                </entry>
            </map>
        </property>
    </bean>

</beans>
